#include <stdio.h>
#include <stdbool.h>

#include "AxiDmaDriver.h"

#include "xscugic.h"
#include "xil_printf.h"

#define FIFO_SIZE 128

XScuGic xInterruptController;

int main()
{
    xil_printf("\n\r\n\rstart - app\n\r");
    
    int status = setupDma(&xInterruptController);
    if(status != XST_SUCCESS) {
        xil_printf("error - setupDma \r\n");
		return XST_FAILURE;
    }

    int txPntr[FIFO_SIZE];
    int rxPntr[FIFO_SIZE];

    for(int i = 0; i < FIFO_SIZE; ++i) {
        txPntr[i] = 2*i;
    }

    Xil_DCacheFlushRange((UINTPTR)txPntr, sizeof(int)*FIFO_SIZE);
    Xil_DCacheFlushRange((UINTPTR)rxPntr, sizeof(int)*FIFO_SIZE);

    xil_printf("start - XAxiDma_SimpleTransfer, XAXIDMA_DMA_TO_DEVICE\n\r");
    status = XAxiDma_SimpleTransfer(&_axiDma, (UINTPTR)txPntr, sizeof(int)*FIFO_SIZE, XAXIDMA_DMA_TO_DEVICE);
    if(status != XST_SUCCESS) {
        xil_printf("error - XAxiDma_SimpleTransfer, XAXIDMA_DMA_TO_DEVICE \r\n");
		return XST_FAILURE;
    }

    xil_printf("start - XAxiDma_SimpleTransfer, XAXIDMA_DEVICE_TO_DMA\n\r");
    status = XAxiDma_SimpleTransfer(&_axiDma, (UINTPTR)rxPntr, sizeof(int)*FIFO_SIZE, XAXIDMA_DEVICE_TO_DMA);
    if(status != XST_SUCCESS) {
        xil_printf("error - XAxiDma_SimpleTransfer, XAXIDMA_DEVICE_TO_DMA \r\n");
		return XST_FAILURE;
    }

    xil_printf("status - XAxiDma dMA to device: %d | XAxiDma device to dma: %d\n\r", checkDmaIdle(DMA_DEVICE_BASEADD, 0x4), checkDmaIdle(DMA_DEVICE_BASEADD, 0x34));

    while((status = checkDmaIdle(DMA_DEVICE_BASEADD, 0x4)) != 2) {} // DMA to device
    while((status = checkDmaIdle(DMA_DEVICE_BASEADD, 0x34)) != 2) {} // Device to dma
    
    xil_printf("status - XAxiDma dMA to device: %d | XAxiDma device to dma: %d\n\r", checkDmaIdle(DMA_DEVICE_BASEADD, 0x4), checkDmaIdle(DMA_DEVICE_BASEADD, 0x34));

    for(int i = 0; i < FIFO_SIZE; ++i) {
        xil_printf("check - %d | %d\n\r", txPntr[i], rxPntr[i]);
    }

    return 0;
}
